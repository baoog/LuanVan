stages:
    - test
    - build
    - deploy
  
variables:
    REGISTRY_HOST: gcr.io
    KUBE_DEPLOYMENT: $CI_PROJECT_NAME
    KUBE_ZONE: asia-southeast1-b
    KUBE_CONTAINER: $CI_PROJECT_NAME-sha256-1
    NAMESPACE: $GCP_PROJECT_NAME-$CI_COMMIT_REF_NAME
    GIT_DEPTH: 2
    DOCKER_TLS_CERTDIR: ""

before_script:
    - echo "GCP_ProjectID $GCP_PROJECT_ID"
    - echo "ProjectName   $CI_PROJECT_NAME"
    - echo "Branch        $CI_COMMIT_REF_NAME"
    - echo "Commit        $CI_COMMIT_SHA"
    - echo "Release image $DEPLOY_TARGET"
  
test:
    stage: test
    image: node:10.16.3-alpine
    before_script:
      - mkdir -p gitlab.com/$CI_PROJECT_NAMESPACE
      - cd gitlab.com/$CI_PROJECT_NAMESPACE
      - ln -s $CI_PROJECT_DIR
      - cd $CI_PROJECT_NAME
    script:
      - npm test  
    artifacts:
      expire_in: 1 week
      paths:
        - package.json
        - package-lock.json
        - config/
        - app.js
  
  
.build-template: &build-template
    stage: build
    image: docker:18.09.8
    services:
      - docker:18.09.8-dind
    before_script:
      - export DOCKER_HOST="tcp://docker:2375"
      - echo $GCLOUD_SA_JSON > ${HOME}/key.json
      - docker login -u _json_key --password-stdin https://$REGISTRY_HOST < ${HOME}/key.json
    script:
      - export ENCODED_CONFIG=`echo "$CONFIG" | base64 | tr -d '\n'`
      - echo "-----BEGIN CERTIFICATE-----"$'\n'$DOMAIN_CRT$'\n'"-----END CERTIFICATE-----" > "./crt.pem"
      - echo "-----BEGIN PRIVATE KEY-----"$'\n'$DOMAIN_KEY$'\n'"-----END PRIVATE KEY-----" > "./key.pem"
      - export DOCKER_OPTS="--dns=8.8.8.8 --dns=8.8.4.4"
      - docker build -f $DOCKER_FILE -t $DOCKER_IMAGE:latest --build-arg config=$ENCODED_CONFIG .
      - docker push $DOCKER_IMAGE
    artifacts:
    after_script:
      - docker logout $REGISTRY_HOST
  
.deploy-template: &deploy-template
    stage: deploy
    image: google/cloud-sdk:latest
    dependencies: []
    script:
      - echo $GCLOUD_SA_JSON > ${HOME}/key.json
      - gcloud auth activate-service-account --key-file ${HOME}/key.json
      - gcloud container clusters get-credentials $KUBE_CLUSTER --zone $KUBE_ZONE --project $GCP_PROJECT_ID
      - kubectl set image -n $NAMESPACE deployment $KUBE_DEPLOYMENT $KUBE_CONTAINER=$DEPLOY_TARGET

docker:
    <<: *build-template
    variables:
      GCP_PROJECT_ID: $GCP_PROJECT_ID_STG
      GCLOUD_SA_JSON: $GCLOUD_SA_JSON
      DOCKER_IMAGE: $REGISTRY_HOST/$GCP_PROJECT_ID_STG/$GCP_PROJECT_NAME/$CI_PROJECT_NAME
      GIT_STRATEGY: none
      DOCKER_FILE: ./Dockerfile
    only:
        - master

deploy:
    <<: *deploy-template
    variables:
      GCP_PROJECT_ID: $GCP_PROJECT_ID_STG
      GCLOUD_SA_JSON: $GCLOUD_SA_JSON
      KUBE_CLUSTER: $KUBE_CLUSTER_STG
      DEPLOY_TARGET: $REGISTRY_HOST/$GCP_PROJECT_ID_STG/$GCP_PROJECT_NAME/$CI_PROJECT_NAME:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHA
      GIT_STRATEGY: none
    only:
      - master